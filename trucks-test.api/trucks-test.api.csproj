<Project Sdk="Microsoft.NET.Sdk.Web">
    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <NeutralLanguage>en-US</NeutralLanguage>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

        <UserSecretsId>af002cd5-47b4-41c9-8548-a95346049efc</UserSecretsId>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>

        <!-- Set this to true if you enable server-side prerendering -->
        <BuildServerSideRenderer>false</BuildServerSideRenderer>

        <RootNamespace>TrucksTest.API</RootNamespace>
        <AssemblyName>TrucksTest.API</AssemblyName>
    </PropertyGroup>

    <PropertyGroup>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <NoWarn>$(NoWarn);1591</NoWarn>
        <IncludeOpenAPIAnalyzers>true</IncludeOpenAPIAnalyzers>
        <DockerComposeProjectPath>..\docker-compose.dcproj</DockerComposeProjectPath>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AutoMapper" Version="10.0.0" />
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.0.1" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Abstractions" Version="2.2.0" />
        <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.7" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.7">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.7" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.7">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.0.2">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.10.9" />
        <PackageReference Include="Autofac" Version="5.2.0" />
        <PackageReference Include="Autofac.Extensions.DependencyInjection" Version="6.0.0" />
        <PackageReference Include="FluentValidation" Version="9.2.0" />
        <PackageReference Include="FluentValidation.AspNetCore" Version="9.2.0" />
        <PackageReference Include="FluentValidation.DependencyInjectionExtensions" Version="9.2.0" />
        <PackageReference Include="MicroElements.Swashbuckle.FluentValidation" Version="4.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.7" />
        <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="3.3.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.VisualStudio.Validation" Version="15.5.31" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.7" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="5.5.1" />
        <PackageReference Include="Swashbuckle.AspNetCore.Filters" Version="5.1.2" />
        <PackageReference Include="Swashbuckle.AspNetCore.Newtonsoft" Version="5.5.1" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>

        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required" />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />

            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

    <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
        <TypeScriptExperimentalDecorators>true</TypeScriptExperimentalDecorators>
        <TypeScriptTarget>ES2017</TypeScriptTarget>
        <TypeScriptJSXEmit>React</TypeScriptJSXEmit>
        <TypeScriptModuleKind>ESNext</TypeScriptModuleKind>
        <TypeScriptCompileOnSaveEnabled>True</TypeScriptCompileOnSaveEnabled>
        <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
        <TypeScriptRemoveComments>True</TypeScriptRemoveComments>
        <TypeScriptOutFile />
        <TypeScriptOutDir />
        <TypeScriptGeneratesDeclarations>True</TypeScriptGeneratesDeclarations>
        <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
        <TypeScriptSourceMap>True</TypeScriptSourceMap>
        <TypeScriptMapRoot />
        <TypeScriptSourceRoot />
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <TypeScriptExperimentalDecorators>true</TypeScriptExperimentalDecorators>
        <TypeScriptTarget>ES2017</TypeScriptTarget>
        <TypeScriptJSXEmit>React</TypeScriptJSXEmit>
        <TypeScriptModuleKind>ESNext</TypeScriptModuleKind>
        <TypeScriptCompileOnSaveEnabled>True</TypeScriptCompileOnSaveEnabled>
        <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
        <TypeScriptRemoveComments>True</TypeScriptRemoveComments>
        <TypeScriptOutFile />
        <TypeScriptOutDir />
        <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
        <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
        <TypeScriptSourceMap>False</TypeScriptSourceMap>
        <TypeScriptMapRoot />
        <TypeScriptSourceRoot />
    </PropertyGroup>
</Project>
